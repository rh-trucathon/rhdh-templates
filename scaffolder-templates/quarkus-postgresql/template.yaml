apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: quarkus-postgresql
  title: quarkus-postgresql
  description: Create a quarkus-rest-postgresql microservice
  tags:
    - recommended
    - java
    - quarkus
    - maven
    - trucathon
    - opencodequest
spec:
  owner: rhdh
  type: service
  parameters:
    - title: Provide information about the OpenShift cluster
      required:
        - openshiftCluster
        - image_host
        - image_organization
        - image_tag
      properties:
        openshiftCluster:
          title: OpenShift Clusters
          type: string
          enum:
            - apps.cluster-rw97m.sandbox266.opentlc.com
            - apps.cluster-XXXXX.sandboxYYY.opentlc.com
      dependencies:
        openshiftCluster:
          oneOf:
            - properties:
                openshiftCluster:
                  enum:
                    - apps.cluster-rw97m.sandbox266.opentlc.com
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  enum: 
                    - quay-rw97m.apps.cluster-rw97m.sandbox266.opentlc.com
                  default: quay-rw97m.apps.cluster-rw97m.sandbox266.opentlc.com
                image_organization:
                  title: Organization
                  type: string
                  description: Name of the Quay Organization
                  default: quayadmin
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
            - properties:
                openshiftCluster:
                  enum:
                    - apps.cluster-XXXXX.sandboxYYY.opentlc.com
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  enum: 
                    - quay-AZER.apps.cluster-XXXXX.sandbox266.opentlc.com
                  default: quay-AZER.apps.cluster-XXXXX.sandbox266.opentlc.com
                image_organization:
                  title: Organization
                  type: string
                  description: Name of the Quay Organization
                  default: quayadmin
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag

    - title: Provide Information for Application
      required:
        - component_id
        - java_package_name
        - api_endpoint
        - group_id
        - artifact_id
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component ("Hero" is good starting point)
          default: Hero
          ui:field: EntityNamePicker
          maxLength: 23
        group_id:
          title: Group Id
          type: string
          default: com.redhat.workshop
          description: Maven Group Id
        artifact_id:
          title: Artifact Id
          type: string
          default: hero-service
          description: Maven Artifact Id
        java_package_name:
          title: Java Package Name
          type: string
          description: Name for the java package. eg (com.redhat.blah)
          default: io.quarkus.workshop.hero
        api_endpoint:
          title: API Endpoint
          default: /api/heroes
          type: string
          description: Path of the first API Endpoint
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
          default: My super heroes service
    # - title: Provide Image Registry Information
    #   required:
    #     - image_registry
    #   properties:
    #     image_registry:
    #       title: Image Registry
    #       type: string
    #       enum:
    #         - Openshift
    #         - Quay
    #   dependencies:
    #     image_registry:
    #       oneOf:
    #         - properties:
    #             image_registry:
    #               enum:
    #                 - Openshift
    #             image_host:
    #               title: Image Host
    #               type: string
    #               description: Host for storing image
    #               default: image-registry.openshift-image-registry.svc:5000
    #             image_tag:
    #               title: Image Tag
    #               default: latest
    #               type: string
    #               description: Build Image tag
    #         - properties:
    #             image_registry:
    #               enum:
    #                 - Quay
    #             image_host:
    #               title: Image Host
    #               type: string
    #               description: Host for storing image
    #               default: quay-rw97m.apps.cluster-rw97m.sandbox266.opentlc.com
    #             image_organization:
    #               title: Organization
    #               type: string
    #               description: Name of the Quay Organization
    #               default: quayadmin
    #             image_tag:
    #               title: Image Tag
    #               default: latest
    #               type: string
    #               description: Build Image tag
    - title: Application repository Information
      required:
        - repo
      properties:
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              description: Your SCM host
              default: gitlab-gitlab
              enum:
                - gitlab-gitlab
            verify_commits:
              title: Verify Commits
              type: string
              description: Verify Git repository commits using Red Hatâ€™s Trusted Artifact Signer (TAS) service
              default: disabled
              enum:
                - enabled
                - disabled

  steps:

    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          namespace: '${{ user.entity.metadata.name }}-${{ parameters.component_id }}-dev'
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}
          java_package_name_dir: ${{ parameters.java_package_name | replace(".","/") }}
          owner: ${{ user.entity.metadata.name }}
          cluster: .${{ parameters.openshiftCluster }}
          host: ${{ parameters.repo.host }}.${{ parameters.openshiftCluster }}
          destination: '${{ user.entity.metadata.name }}/${{ parameters.component_id }}'
          quay_destination: ${{ parameters.image_organization}}/${{ parameters.component_id }}
          port: 8080
          verify_commits: ${{ parameters.repo.verify_commits }}
          api_endpoint: ${{ parameters.api_endpoint }}
          system: ${{ user.entity.metadata.name }}-workshop
          user: ${{ user.entity.metadata.name }}

    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}.${{ parameters.openshiftCluster }}?owner=${{ user.entity.metadata.name }}&repo=${{parameters.component_id}}"
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: https://${{ parameters.repo.host }}.${{ parameters.openshiftCluster }}/${{ user.entity.metadata.name }}/${{parameters.component_id}}-gitops.git
          source_repository: https://${{ parameters.repo.host }}.${{ parameters.openshiftCluster }}/${{ user.entity.metadata.name }}/${{parameters.component_id}}.git
          repository_name: ${{parameters.component_id}}
          git_owner: '${{ user.entity.metadata.name }}'
          cluster: .${{ parameters.openshiftCluster }}
          # namespace: ${{ parameters.component_id }}-dev
          namespace: ${{ user.entity.metadata.name }}-workshop-dev
          image_registry: ${{ parameters.image_registry }}
          image_host: ${{ parameters.image_host }}
          image_organization: ${{ parameters.image_organization }}
          image_name: ${{ parameters.component_id }}
          image_tag: ${{ parameters.image_tag }}
          port: 8080
          repository_host: ${{ parameters.repo.host }}.${{ parameters.openshiftCluster }}
          deployment_name: ${{ parameters.component_id }}
          user: ${{ user.entity.metadata.name }}
          verify_commits: ${{ parameters.repo.verify_commits }}
        targetPath: ./tenant-gitops

    - id: publish-gitops
      name: Publishing to Resource Repository
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}.${{ parameters.openshiftCluster }}?owner=${{ user.entity.metadata.name }}&repo=${{parameters.component_id}}-gitops"
        title: gitops resources for ${{ parameters.component_id }}
        description: gitops resources for ${{ parameters.component_id }}
        sourcePath: ./tenant-gitops
        repoVisibility: public

    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ user.entity.metadata.name }}-${{ parameters.component_id }}-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: 'https://${{ parameters.repo.host }}.${{ parameters.openshiftCluster }}/${{ user.entity.metadata.name }}/${{ parameters.component_id }}-gitops.git'
        path: 'argocd/'

  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
